name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env: 
   EB_PACKAGE_3_BUCKET_NAME : "artur-flask-application-packages"
   EB_APPLICATION_NAME      : "MyFlask"
   EB_ENVIRONMENT_NAME      : "MyFlask-env"
   DEPLOY_PACKAGE_NAME      : "flask_app_${{ github.sha }}.zip"
   AWS_REGION_NAME          : "eu-central-1"
      
on:
  push:
    branches: 
      - main
jobs:
  my_ci_part:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone our repo
        uses: actions/checkout@v3
      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
      - name: configure my AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id : ${{ secrets.My_AWS_Access_key }}
          aws-secret-access-key: ${{ secrets. My_AWS_Secret_key }}
          aws-region : ${{ env.AWS_REGION_NAME }}
          
      - name: Copy Deployment Package to s3 backet
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_3_BUCKET_NAME }}/
        
      - name: Print Message
        run: echo "It was Great!!!"
        
  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]

    steps:
    - name: configure my AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
          aws-access-key-id : ${{ secrets.My_AWS_Access_key }}
          aws-secret-access-key: ${{ secrets. My_AWS_Secret_key }}
          aws-region : ${{ env.AWS_REGION_NAME }}
    - name: Create new elasticbeanstalk application version
      run: |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source bandle S3Bucket="${{ env.EB_PACKAGE_3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CoimmitSHA-${{ github.sha }}"
     
    - name: Deploy new Elasticbeanstalk Application version
      run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"   
    - name: Print Message
      run: echo "It was Great!!!"
        
        
        
